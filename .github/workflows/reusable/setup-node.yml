name: Setup Node.js Environment

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '20'
      cache-dependency-path:
        description: 'Path to dependency file for caching'
        required: false
        type: string
        default: 'package-lock.json'
      install-dependencies:
        description: 'Whether to install dependencies'
        required: false
        type: boolean
        default: true
      enable-corepack:
        description: 'Enable Corepack for package manager version management'
        required: false
        type: boolean
        default: false
      registry-url:
        description: 'Registry URL for npm authentication'
        required: false
        type: string
    outputs:
      node-version:
        description: 'Installed Node.js version'
        value: ${{ jobs.setup.outputs.node-version }}
      cache-hit:
        description: 'Whether cache was hit'
        value: ${{ jobs.setup.outputs.cache-hit }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.setup-node.outputs.node-version }}
      cache-hit: ${{ steps.cache-node-modules.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1              # Optimize checkout depth

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.cache-dependency-path }}
          registry-url: ${{ inputs.registry-url }}

      - name: Enable Corepack
        if: inputs.enable-corepack
        run: corepack enable

      - name: Cache node modules with enhanced strategy
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ inputs.node-version }}-${{ hashFiles(inputs.cache-dependency-path) }}-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ inputs.node-version }}-
            ${{ runner.os }}-node-

      - name: Cache npm global packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-global-${{ inputs.node-version }}
          restore-keys: |
            ${{ runner.os }}-npm-global-

      - name: Install dependencies
        if: inputs.install-dependencies && steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          echo "üì¶ Installing dependencies..."
          npm ci --prefer-offline --no-audit
          echo "‚úÖ Dependencies installed successfully"

      - name: Verify Node.js setup
        run: |
          echo "üîç Node.js setup verification:"
          echo "  Node version: $(node --version)"
          echo "  NPM version: $(npm --version)"
          echo "  Working directory: $(pwd)"
          echo "‚úÖ Node.js environment ready"