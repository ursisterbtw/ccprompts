name: Validate Prompts

on:
  workflow_call:
    inputs:
      validation-script:
        description: 'Path to validation script'
        required: false
        type: string
        default: 'scripts/validate-prompts.js'
      fail-on-warnings:
        description: 'Whether to fail on warnings'
        required: false
        type: boolean
        default: false
      max-errors:
        description: 'Maximum allowed errors'
        required: false
        type: number
        default: 5
    outputs:
      validation-status:
        description: 'Overall validation status'
        value: ${{ jobs.validate.outputs.status }}
      error-count:
        description: 'Number of validation errors'
        value: ${{ jobs.validate.outputs.errors }}
      warning-count:
        description: 'Number of validation warnings'
        value: ${{ jobs.validate.outputs.warnings }}

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.validate-prompts.outputs.status }}
      errors: ${{ steps.validate-prompts.outputs.errors }}
      warnings: ${{ steps.validate-prompts.outputs.warnings }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run validation
        id: validate-prompts
        env:
          VALIDATION_SCRIPT: ${{ inputs.validation-script }}
          MAX_ERRORS: ${{ inputs.max-errors }}
        run: |
          echo "[VALIDATE] Running prompt validation..."

          # Run validation and capture output
          set +e
          VALIDATION_OUTPUT=$(node "$VALIDATION_SCRIPT" 2>&1)
          VALIDATION_EXIT_CODE=$?
          set -e

          echo "$VALIDATION_OUTPUT"

          # Extract metrics from output
          ERRORS=$(echo "$VALIDATION_OUTPUT" | grep -E "Errors?: \d+" | grep -oE "\d+" || echo "0")
          WARNINGS=$(echo "$VALIDATION_OUTPUT" | grep -E "Warnings?: \d+" | grep -oE "\d+" || echo "0")

          # Determine overall status
          if [ "$ERRORS" -gt "$MAX_ERRORS" ]; then
            STATUS="failed"
            echo "[ERROR] Too many validation errors: $ERRORS (max: $MAX_ERRORS)"
          elif [ "$VALIDATION_EXIT_CODE" -ne 0 ]; then
            STATUS="failed"
            echo "[ERROR] Validation script failed"
          else
            STATUS="passed"
            echo "[OK] Validation passed"
          fi

          # Set outputs
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "errors=$ERRORS" >> $GITHUB_OUTPUT
          echo "warnings=$WARNINGS" >> $GITHUB_OUTPUT

          # Fail if needed
          if [ "$STATUS" = "failed" ]; then
            exit 1
          fi

          if [ "${{ inputs.fail-on-warnings }}" = "true" ] && [ "$WARNINGS" -gt 0 ]; then
            echo "[ERROR] Failing due to warnings (fail-on-warnings is enabled)"
            exit 1
          fi

      - name: Generate validation report
        if: always()
        run: |
          cat << EOF >> $GITHUB_STEP_SUMMARY
          ## [REPORT] Validation Report

          - **Status**: ${{ steps.validate-prompts.outputs.status }}
          - **Errors**: ${{ steps.validate-prompts.outputs.errors }}
          - **Warnings**: ${{ steps.validate-prompts.outputs.warnings }}
          - **Script**: ${{ inputs.validation-script }}

          EOF