# Security Configuration for CCPrompts Development Environment
# Rate limiting, security headers, and access controls

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=30r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Security server block for common security rules
server {
    listen 80;
    server_name security.localhost;
    
    # Global security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Download-Options "noopen" always;
    
    # Hide nginx version
    server_tokens off;
    
    # Disable methods not in use
    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
        return 444;
    }
    
    # Block common attack patterns
    location ~* \.(php|asp|aspx|jsp)$ {
        deny all;
        return 444;
    }
    
    # Block access to sensitive files
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
        return 444;
    }
    
    # Block access to version control
    location ~ /\.(git|svn|hg|bzr) {
        deny all;
        return 444;
    }
    
    # Block access to common backup files
    location ~* \.(bak|backup|swp|tmp)$ {
        deny all;
        return 444;
    }
    
    # Rate limiting for different endpoints
    location /api/auth/ {
        limit_req zone=auth_limit burst=3 nodelay;
        limit_conn conn_limit_per_ip 5;
        
        proxy_pass http://api_backend/api/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        proxy_pass http://api_backend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location / {
        limit_req zone=general_limit burst=50 nodelay;
        limit_conn conn_limit_per_ip 20;
        
        return 200 "Security configuration active";
        add_header Content-Type text/plain;
    }
}

# SSL/TLS configuration (for HTTPS when certificates are available)
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
ssl_prefer_server_ciphers off;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 10m;

# Security map for blocking bad user agents
map $http_user_agent $blocked_agent {
    default 0;
    ~*malicious 1;
    ~*attack 1;
    ~*hack 1;
    "" 1;
}

# IP whitelist for admin functions (development only)
geo $admin_allowed {
    default 0;
    127.0.0.1 1;
    172.16.0.0/12 1;
    10.0.0.0/8 1;
    192.168.0.0/16 1;
}

# CORS configuration for development
map $http_origin $cors_origin {
    default "";
    "~^https?://localhost(:[0-9]+)?$" "$http_origin";
    "~^https?://[^/]+\.localhost$" "$http_origin";
    "~^https?://127\.0\.0\.1(:[0-9]+)?$" "$http_origin";
}

# Request ID for tracing
map $request_id $req_id {
    default $request_id;
    "" $connection-$connection_requests;
}